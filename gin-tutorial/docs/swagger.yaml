definitions:
  dto.JWT:
    properties:
      token:
        type: string
    type: object
  dto.Response:
    properties:
      message:
        type: string
    type: object
  entity.Person:
    properties:
      age:
        maximum: 130
        minimum: 1
        type: integer
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
    required:
    - email
    - firstname
    - lastname
    type: object
  entity.Video:
    properties:
      author:
        $ref: '#/definitions/entity.Person'
      created_at:
        type: string
      description:
        maxLength: 200
        type: string
      id:
        type: integer
      title:
        maxLength: 100
        minLength: 2
        type: string
      updated_at:
        type: string
      url:
        type: string
    required:
    - author
    - title
    - url
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Authenticates a user and provides a JWT to Authorize API calls
      parameters:
      - description: User Credentials
        in: formData
        name: username
        required: true
        type: string
      - description: User Credentials
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JWT'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Response'
      summary: Provides a JSON Web Token
      tags:
      - Authentication
  /videos:
    get:
      description: Get all existing videos
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Video'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - ApiKeyAuth: []
      summary: List all videos
      tags:
      - videos
    post:
      description: Create a new video
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Video
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/entity.Video'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Video'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - ApiKeyAuth: []
      summary: Create video
      tags:
      - videos
  /videos/{id}:
    delete:
      description: Delete video by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Video'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete Video
      tags:
      - videos
    put:
      description: Update video by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Video
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/entity.Video'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Video'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - ApiKeyAuth: []
      summary: Update video
      tags:
      - videos
swagger: "2.0"
